<!DOCTYPE html>

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
    <title>Bootstrap: Materials</title>
    <link rel="stylesheet" href="lib/curriculum.css">
    <link rel="stylesheet" type="text/css" href="https://www.BootstrapWorld.org/styles.css"/>
    <style>
        .logo img { width: 300px; }
        dl { counter-reset: term; }

        dl > dt:before {
            counter-increment: term;
            content: counter(term) ".";
            margin-right: 5px;
        }
    </style>
    <script src="dependency-graph.js"></script>
    <script src="https://unpkg.com/pdf-lib@1.4.0"></script>
    <script src="https://unpkg.com/downloadjs@1.4.7"></script>
    <script>
        // Based on an example at https://jsfiddle.net/Hopding/Lyb16ocj/13/
        const { PDFDocument, rgb, degrees } = PDFLib
        var graph = graph, lessons = lessons;

        function populateLessons() {
            var search = location.search.substring(1);
            var {pathwayName, lessons: pathwayLessons} = JSON.parse('{"' + decodeURI(search).replace(/"/g, '\\"').replace(/&/g, '","').replace(/=/g,'":"') + '"}');
            lessons = pathwayLessons.split(",");
            console.log(pathwayName, lessons);
            document.getElementById('pathwayTitle').innerHTML = pathwayName;
            var lessonList = document.getElementById('lesson-list').children[0];
            lessons.forEach(l => {
                var lesson = graph[l];
                var dt = document.createElement('dt');
                dt.className = "hdlist1";
                dt.innerHTML = `
                    <dt class="hdlist1"><a href="./lessons/${l}/index.shtml">${lesson.title}</a></dt>
                        <dd>
                            <p>${lesson.description}</p>
                        </dd>
                `;
                lessonList.appendChild(dt);
            });

            // update the list of accessible lessons
            var accessibleList = document.getElementById('accessible-lesson-list');
            var accessible =  Object.getOwnPropertyNames(graph).filter(name => 
                graph[name].prerequisites.every(p => lessons.includes(p)));

            accessible.forEach(l => {
                var li = document.createElement('li');
                li.innerHTML = graph[l].title;
                accessibleList.appendChild(li);
            });
        }

        async function printWorkook(lessons, graph) {
          const pdfDoc = await PDFDocument.create();
            // print out wb page paths
            var pageUrls = lessons
                .map(l => graph[l].pages
                    .filter(p => p !== "")
                    .map(p => 
                        "courses/algebra-pyret/" + "lessons/"+l+"/pages/"+p))
                .flat()
                .map(p => p.replace(".adoc", ".pdf"))
                .map(p => p.replace(" landscape", ""));
            //console.log('pages will be loaded from:', pageUrls)
console.log('processing', pageUrls);

          document.getElementById('status').innerHTML = "0 / " + pageUrls.length;

        for (const [idx, url] of pageUrls.entries()) {
            const page = pdfDoc.addPage();
console.log('processing', url);
            const page1Bytes = await fetch(url).then((res) => res.arrayBuffer());
            const [page_1]   = await pdfDoc.embedPdf(page1Bytes);
            const page_1Dims = page_1.scale(1.0);
            const landscape  = page_1Dims.width > page_1Dims.height;
            const rightHand  = idx%2 == 0;

            const portrait = {
              x: (page.getWidth()  / 2) - page_1Dims.width  / 2,
              y: (page.getHeight() / 2) - page_1Dims.height / 2,
            };

            const landscapeRight = {
              x: page.getWidth(),
              y: 0,
              rotate: degrees(90),
            };

            const landscapeLeft = {
              x: 0,
              y: page.getHeight(),
              rotate: degrees(-90),
            };

            const pageSettings = landscape? (rightHand? landscapeRight : landscapeLeft) 
              : portrait;

            page.drawPage(page_1, {...page_1Dims, ...pageSettings});

            document.getElementById('status').innerHTML = (idx+1) + " / " + pageUrls.length;

            if(idx <= 1 ) continue;
            page.drawText(String(idx - 1), {
              x: page.getWidth() / 2,
              y: 35,
              size: 8,
              color: rgb(0,0,0),
              rotateDegrees:landscape ? -90 : 0
            })
          }

          // Serialize the PDFDocument to bytes (a Uint8Array)
          const pdfBytes = await pdfDoc.save()
          download(pdfBytes, "pdf-lib_pdf_page_embedding_example.pdf", "application/pdf");
        }
    </script>
</head>

<body class="narrativepage article narrative pyret" onload="populateLessons()">
    <!--#include virtual="/menubar.ssi" -->
    <div id="body">
        <div id="header">
            <h1 id="pathwayTitle" style="border-bottom: none;"></h1>
        </div>
        <div id="content">
            <div id="preamble_disabled" class="lessonSummary">
                <div class="sect1">
                    <div class="paragraph">
                        <p>This is a custom pathway, created just for you. <b>Be sure to bookmark this page</b>, so that you can return to it!</p>
                    </div>
                </div>
            </div>

        <div class="clearfix item bottom-border">
            <h2>Lesson Plans</h2>
            <div class="sectionbody">
                <div id="lesson-list" class="dlist">
                    <dl>
                    </dl>
                </div>
            </div>
        </div>

        <div class="clearfix item bottom-border">
            <button onclick="printWorkook(lessons, graph)">Print Workbook</button>
            <span id="status"></span>
        </div>

        <div class="clearfix item bottom-border">
            <h2>What's Next?</h2>
            <p/>
            Once your students have finished this pathway, there are plenty of other Bootstrap lessons your students are ready to dive into!
            <ul id="accessible-lesson-list">
            </ul>
        </div>
    </div>
</body>
</html>
