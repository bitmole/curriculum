# created 2023-01-14
# last modified 2023-01-21

# all: initialization copylessons buildlessons buildpathways doconversions
include $(MAKE_DIR)utils.mk

all: copy-lessons copy-pathways

###############################################################################

initialization: distribution/$(NATLANG)/extlib/mathjax/.
	@mkdir -p $(PROGDIR)
	@mkdir -p distribution/$(NATLANG)/lib
	@$(CP) -upr shared/langs/en-us/* $(PROGDIR)
	@$(CP) -upr shared/langs/en-us/*.css distribution/$(NATLANG)/lib
	@if test $(NATLANG) != en-us -a -d shared/langs/$(NATLANG); then \
		$(CP) -upr shared/langs/$(NATLANG)/* $(PROGDIR); fi
	@mkdir -p distribution/$(NATLANG)/lib/Badges
	@mkdir -p distribution/$(NATLANG)/lib/images
	@$(CP) -upr $(PROGDIR)/Badges/* distribution/$(NATLANG)/lib/Badges
	@$(CP) -upr $(PROGDIR)/images/* distribution/$(NATLANG)/lib/images
	@$(CP) -upr shared/langs/en-us/docroot/* distribution/$(NATLANG)
	@if test $(NATLANG) != en-us -a -d shared/langs/$(NATLANG)/docroot; then \
		$(CP) -upr shared/langs/$(NATLANG)/docroot/* distribution/$(NATLANG); fi
	@$(CP) -p lib/*.html $(PROGDIR)
	@$(CP) -p lib/*.rkt $(PROGDIR)
	@$(CP) -p lib/*.sh $(PROGDIR)
	@$(CP) -p lib/ano* $(PROGDIR)
	@$(CP) -p lib/check* $(PROGDIR)
	@$(CP) -p lib/.hta* $(PROGDIR)
	@$(CP) -p lib/*.css distribution/$(NATLANG)/lib
	@$(CP) -p lib/*.js* distribution/$(NATLANG)/lib
	@$(CP) -p lib/*.less distribution/$(NATLANG)/lib
	@$(CP) -p lib/*.png distribution/$(NATLANG)/lib
	@for f in distribution/$(NATLANG)/lib/*.less; do \
		if test -f "$$f"; then \
		node_modules/less/bin/lessc "$$f" "$${f%.less}.css"; fi; done
	@$(CP) -p shared/langs/en-us/*.css distribution/$(NATLANG)/lib
	@mkdir -p distribution/$(NATLANG)/.cached
	@rm -f $(ADOC_INPUT) $(ADOC_POSTPROC_PWYINDEP_INPUT) \
		$(RELEVANT_LESSONS_INPUT)
	@touch $(RELEVANT_LESSONS_INPUT)
	@echo "{\"htmlFileSpecs\": [ \"ignoreElement\"" > $(PUPPETEER_INPUT)
	@echo '(' > $(ADOCABLES_INPUT)

#fixme: once logic is set, split above into actual rules to reduce re-doing

node_modules/mathjax:
	npm install

distribution/$(NATLANG)/extlib/mathjax/.: node_modules/mathjax
	@mkdir -p $@
	@$(CP) -upr node_modules/mathjax/* $@
	@$(CP) -p lib/mathjaxlocal.js $@/config/local
	@rm -fr $@/[CLRptu]*

###############################################################################

the-lessons := $(wildcard lessons/**/langs/$(NATLANG))

the-distribution-lessons := $(patsubst %,distribution/$(NATLANG)/lessons/%/., \
                                $(notdir \
                                  $(patsubst %/langs/$(NATLANG),%, \
                                    $(the-lessons))))

lesson-bare-name = $(notdir $(patsubst %/langs/$(NATLANG),%,$1))

copy-lessons: initialization $(the-distribution-lessons)

define make-copy-lesson-rule
distribution/$(NATLANG)/lessons/$(call lesson-bare-name,$1)/.: $1
	@mkdir -p $$@
	@touch $$@
	@$(CP) -upr $$</* $$@
	@$(MAKE_DIR)massage-distribution-lesson.sh $$@

endef

$(eval $(foreach lesson,$(the-lessons),$(call make-copy-lesson-rule,$(lesson))))

#########################################################################

the-pathways := $(wildcard pathways/*)

the-courses := $(patsubst \
	%,distribution/$(NATLANG)/courses/%/.,$(notdir $(the-pathways)))

# the-courses := $(foreach \
# 	pathway,$(the-pathways),distribution/$(NATLANG)/courses/$(notdir $(pathway))/.)

# copy-pathways:
# 	@echo tp is $(the-pathways)
# 	@echo tc is $(the-courses)

copy-pathways: initialization $(the-courses)

define make-copy-pathway-rule
distribution/$(NATLANG)/courses/$(notdir $1)/.: $1
	@# echo making $$@ from $$<
	@mkdir -p $$@
	@touch $$@
	@if test $(ls -A $$</langs/$(NATLANG)); then \
		$(CP) -upr $$</langs/$(NATLANG)/* $$@ 2>/dev/null; fi
	@if test ! -f $$</langs/$(NATLANG)/index.adoc; then \
		touch $$@/index.adoc; fi
	@$(MAKE_DIR)massage-course.sh $$@

endef

$(eval $(foreach pathway,$(the-pathways),$(call make-copy-pathway-rule,$(pathway))))
